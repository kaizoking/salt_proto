<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Salt_Parado</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>obj_PAR_Player</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Iniciar Variáveis

grav = 1;
spd = 10;
hspd = 5;
vspd = 0;

eating = false;
eatalarm = false;
facing = 1;
control = true;
damaged = false;
vulnerable = true;

bellyFull = false;

jumps = 0;

jumpsmax = 1;

jspd = 20;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vulnerable = true;
control = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>eating = false;
eatingGlobal = false;
hspd = 0;
control = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>eating = true;
eatingGlobal = true;
alarm[1] = 20;
control = false;
image_index = 0;
image_speed = 0.08;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Físicas de plataforma

var rkey = keyboard_check(vk_right);
var lkey = -keyboard_check(vk_left);
var jkey = keyboard_check_pressed(vk_up);
var jkey_held = keyboard_check(vk_up);
var eatkey = keyboard_check_pressed(vk_control);


var move = rkey + lkey;

if (control)
{
    hspd = move * spd;
    if(move &gt; 0)
        facing = 1;
    else if(move &lt; 0)
        facing = -1;
}

// Gravidade
if(vspd &lt; 20)
{
    vspd += grav;
}

// Verificar o chão
if(place_meeting(x, y+1, obj_PAR_Solid))
{
    jumps = jumpsmax;
}

if(jkey) &amp;&amp; !eating &amp;&amp; (jumps &gt; 0)
{
    vspd = -jspd;
    jumps -= 1;
}


// Colisão Horizontal
if(place_meeting(x+hspd,y,obj_PAR_Solid))
{
    while(!place_meeting(x+sign(hspd),y,obj_PAR_Solid))
    {
        x += sign(hspd);
    }
    hspd = 0;
}


// Mover Horizontalmente

x += hspd;

// Colisão Vertical
if(place_meeting(x,y+vspd,obj_PAR_Solid))
{
    while(!place_meeting(x,y+sign(vspd),obj_PAR_Solid))
    {
        y += sign(vspd);
    }
    vspd = 0;
}

// Mover Verticalmente

y += vspd;

// Controle dos Sprites
if(eatkey &amp;&amp; !eating &amp;&amp; !bellyFull)
{
    alarm[0] = 1;
}

if(damaged)
{
    vulnerable = false;
    alarm[2] = 20;
    if(saltLife &lt; 9)
        saltLife++;
    damaged = false;
    if(saltLife &gt; 8)
    {
     game_restart();
    }   
}

if(!vulnerable)
{
    control = false;
    hspd = -((spd * facing)*2);
    if(jumps &gt; 0)
    {
        vspd = -jspd/2;
        jumps -= 1;
    } 
}
else if(eating &amp;&amp; !bellyFull)
{
    sprite_index = spr_Salt_Comendo;
    hspd = (spd * facing) * 1.8;
    if(jumps &gt; 0)
    {
        vspd = -jspd/2;
        jumps -= 1;
    } 
}
else
{
    if(jumps = 0)
    {
        sprite_index = spr_Salt_Pulando;
    }
    else
    {   
        if(!bellyFull)
        {
            if(xprevious != x)
            {
                sprite_index = spr_Salt_Andando;
                image_speed = 0.1;  
            }
            else
            {
                sprite_index = spr_Salt_Parado;
            }
        }
        else
        {
            if(xprevious != x)
            {
                sprite_index = spr_Salt_G_Andando;
                image_speed = 0.1;  
            }
            else
            {
                sprite_index = spr_Salt_G_Parado;
            }
        }
    }
}
// Controlar a direção que o personagem está virado

if(xprevious &lt; x)
{
    image_xscale=1;  
} 
else if(xprevious &gt; x)
{
    image_xscale=-1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
